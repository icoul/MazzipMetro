<?xml version="1.0" encoding="UTF-8"?>
<!-- #11. mapper 기본 설정 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- #12. 루트 엘리먼트 및 네임스페이스 설정하기(이 네임스페이스의 이름은 프로젝트 전체 내에서 반드시 고유해야만 한다.) --> 
<mapper namespace="boss">
	<!-- 코인 충전시 -->
	<update id="coinUpdate" parameterType="java.util.HashMap">
		update tbl_User set userPoint = userPoint + #{userPoint}
		where userStatus = 0 and userSort = 1 and userSeq = #{userSeq}
	</update>
	<!-- 파워배너 결제시 -->
	<update id="bannBuyUpdate" parameterType="java.util.HashMap">
		update tbl_User set userPoint = userPoint - 1000000
		where userSeq = #{userSeq}
	</update>
	<!-- 파워배너 컨텐츠테이블 등록 -->
	<insert id="bannInsert" parameterType="java.util.HashMap">
		insert into tbl_restaurant_content(restSeq, userSeq, contentSeq, contentBuyDate, contentLimit, contentStatus) 
		values(#{restSeq}, #{userSeq},'1', default , sysdate+30, default)
	</insert>
	<!-- 파워링크 결제시 -->
	<update id="linkBuyUpdate" parameterType="java.util.HashMap">
		update tbl_User set userPoint = userPoint - 500000
		where userSeq = #{userSeq}
	</update>
	<!-- 파워링크 컨텐츠테이블 등록 -->
	<insert id="linkInsert" parameterType="java.util.HashMap">
		insert into tbl_restaurant_content(restSeq, userSeq, contentSeq, contentBuyDate, contentLimit, contentStatus) 
		values(#{restSeq}, #{userSeq},'2', default , sysdate+30, default)
	</insert>
	<!-- 추천광고 결제시 -->
	<update id="recomBuyUpdate" parameterType="java.util.HashMap">
		update tbl_User set userPoint = userPoint - 300000
		where userStatus = 0 and userSort = 1 and userSeq = #{userSeq}
	</update>
	<!-- 추천광고  컨텐츠테이블 등록 -->
	<insert id="recomInsert" parameterType="java.util.HashMap">
		insert into tbl_restaurant_content(restSeq, userSeq, contentSeq, contentBuyDate, contentLimit, contentStatus) 
		values(#{restSeq}, #{userSeq},'3', default , sysdate + 30, default)
	</insert>
	
	<resultMap type="java.util.HashMap" id="userInfo">
		<result column="restSeq" 		property="RESTSEQ" 		javaType="String"/>
		<result column="restName" 		property="RESTNAME" 		javaType="String"/>
	</resultMap>
	
	<!-- 컨텐츠테이블 등록하기위해 restSeq 구해오기 -->
	<select id="getRestSeq" parameterType="String" resultType="java.util.HashMap" resultMap="userInfo">
		select restSeq,restName
		from tbl_restaurant
		where userSeq = #{userSeq}
	</select>
	
	<!-- 컨텐츠 구매목록 -->
	 <resultMap type="java.util.HashMap" id="bconList">
		<result column="restSeq" 		property="restSeq" 		javaType="String"/>
		<result column="gradeName" 		property="gradeName" 	javaType="String"/> 	
		<result column="restName" 		property="restName" 	javaType="String"/>
		<result column="restPhone" 		property="restPhone" 	javaType="String" />
		<result column="restAddr" 		property="restAddr" 	javaType="String" />  
		<result column="contentName" 	property="contentName" 	javaType="String" />  
		<result column="contentLimit" 	property="contentLimit" javaType="String" />    
	</resultMap>
	<select id="bossConList" resultMap="bconList" parameterType="java.util.HashMap">
		select V.rno,v.userSeq, V.restSeq, V.gradeName, V.restName, V.restPhone, V.restAddr, V.contentName, V.contentLimit
		    from 
		    (   
		      select rowNum as rno, T.userSeq,T.restSeq, T.gradeName, T.restName, T.restPhone, T.restAddr, T.contentName, T.contentLimit
		      from
		      (
		        select userSeq,restSeq, gradeName, restName, restPhone, restAddr, contentName, to_char(contentLimit, 'yyyy-mm-dd') as contentLimit
		        from view_contentList
		        group by userSeq,contentName,restSeq, gradeName, restName, restPhone, restAddr, contentLimit
		       )T
		  ) V
		  where V.userSeq=#{userSeq}
		and V.RNO >= #{start} and V.RNO <![CDATA[<=]]> #{end}
	</select>
	
	<!-- 컨텐츠 페이징바 -->
     <select id="getBossConTotal" parameterType="java.util.HashMap" resultType="int">  
    	select count(*)
    		from 
	      (
		        select V.rno,v.userSeq, V.restSeq, V.gradeName, V.restName, V.restPhone, V.restAddr, V.contentName, V.contentLimit
			    from 
			    (   
			      select rowNum as rno, T.userSeq,T.restSeq, T.gradeName, T.restName, T.restPhone, T.restAddr, T.contentName, T.contentLimit
			      from
			      (
			        select userSeq,restSeq, gradeName, restName, restPhone, restAddr, contentName, to_char(contentLimit, 'yyyy-mm-dd') as contentLimit
			        from view_contentList
			        group by userSeq,contentName,restSeq, gradeName, restName, restPhone, restAddr, contentLimit
			       )T
			  ) V
			  where V.userSeq=#{userSeq}
	      ) P
    </select>
</mapper>
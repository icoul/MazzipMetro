<?xml version="1.0" encoding="UTF-8"?>
<!-- #11. mapper 기본 설정 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- #12. 루트 엘리먼트 및 네임스페이스 설정하기(이 네임스페이스의 이름은 프로젝트 전체 내에서 반드시 고유해야만 한다.) --> 
<mapper namespace="restaurant">

	<!-- 관리자용 업장 수정 요청(update) -->
	<update id="adminRestEditEnd" parameterType="com.go.mazzipmetro.vo.RestaurantVO" >
		update tbl_restaurant set
		<if test="restStatus == 0">
			restName = #{restName}, userSeq = #{userSeq}, gradeSeq = #{gradeSeq}
		  , restAddr = #{restAddr}, restNewAddr = #{restNewAddr}, restPhone = #{restPhone}
		  , restLatitude = #{restLatitude}, restLongitude = #{ restLongitude}
		  , restContent = #{restContent}, dongId = #{dongId}, metroId = #{metroId} 
		  <if test="restImg != null">
		  	, restImg = #{restImg}
		  </if>
	  	</if>
	  	<if test="restStatus == 1">
	  		restStatus = 1
	  	</if>
		where restSeq = #{restSeq}
	</update>
	
	
	<!-- 관리자용 업장 소개 이미지 삭제 -->
	<update id="delRestAd" parameterType="java.util.HashMap">
		update tbl_restaurant_ad set adImgStatus = 1
		where restSeq = #{restSeq} and adImg = #{adImg}
	</update>
	
	<!-- 관리자용 업장 소개 이미지 추가 -->
	<insert id="insertRestAd" parameterType="java.util.HashMap">
		insert into tbl_restaurant_ad values(#{restSeq}, #{adImg}, default)
	</insert>
	
	
	<!-- 관리자용 업장수정을 위한 하나의  업장 등급 리스트 가져오기 -->
	<resultMap type="java.util.HashMap" id="resultRestGradeList">
		 <result column="gradeSeq"	  	        property="gradeSeq" 			    	javaType="String" />
		 <result column="gradeName"	  	    property="gradeName" 			    javaType="String" />
	 </resultMap>
	<select id="restGradeList" resultMap="resultRestGradeList">
		select * from tbl_grade where gradeSeq like 'RG%'
	</select>

	<!-- 관리자용 업장수정을 위한 하나의 RestaurantVO 가져오기 -->
	<select id="adminRestEditInfo" parameterType="String" resultType="com.go.mazzipmetro.vo.RestaurantVO">
		select A.*, B.dongName
		from(
		select A.*, B.metroName
		from(
		select A.*, B.gradeName
		from tbl_restaurant A left join tbl_grade B 
		on A.gradeSeq = B.gradeSeq
		where A.restSeq = #{restSeq}) A left join tbl_metro B
		on A.metroId = B.metroId) A left join tbl_dong B
		on A.dongId = B.dongId 
	</select>
	
	<!-- 임시_업장 restSeq 가져오기(태그가 있는 행만 가져오기) -->
	<!-- <select id="temp_getRestSeqForTags" resultType="String">
		select distinct(restSeq) from tbl_restaurant_tag
	</select> -->
	
	<!-- 관리자용 업장 수정 요청 (AdImg 이름 요청) -->
	<select id="adminRestAdImgInfo" parameterType="String" resultType="String">
		select adImg from tbl_restaurant_ad where restSeq = #{restSeq} and adImgStatus = 0
	</select>
	
	<!-- restSeq로 하나의 업장을 가져오기 -->
	<resultMap type="java.util.HashMap" id="dataresultmap1">
		 <result column="restseq"	  	        property="restseq" 			    	javaType="String" />
		 <result column="restname"	  	    	property="restname" 			    javaType="String" />
		 <result column="userseq"	  	        property="userseq" 			    	javaType="String" />
		 <result column="gradeseq"	  	    	property="gradeseq" 			    javaType="String" />
		 <result column="restaddr"	  	        property="restaddr" 			    	javaType="String" />
		 <result column="restnewaddr"	  	property="restnewaddr" 			javaType="String" />
		 <result column="restphone"	  	    property="restphone" 			    javaType="String" />
		 <result column="restlatitude"	  	    property="restlatitude" 			javaType="String" />
		 <result column="restlongitude"	  	property="restlongitude" 			javaType="String" />
		 <result column="restzindex"	  	    property="restzindex" 			    javaType="String" />
		 <result column="metroid"	  	        property="metroid" 			    	javaType="String" />
		 <result column="dongid"	  	    		property="dongid" 			    	javaType="String" />
		 <result column="restregdate"	  	    property="restregdate" 			javaType="String" />
	</resultMap>

	<select id="getRestaurant" parameterType="String" resultMap="dataresultmap1">
		select restseq, restname, userseq, gradeseq, restaddr, restnewaddr, restphone, restlatitude, restlongitude, restzindex, metroid, dongid, to_char(restregdate, 'yyyy-mm-dd') as restregdate 
		from TBL_RESTAURANT
		where restseq = #{restseq} and reststatus = 0
	</select>
	
	<!-- 검색시 자동글완성 기능 구현 -->
	<select id="autoComplete"  parameterType="java.util.HashMap" resultType="String">
		<if test='srchType.equals("restName")'>
			select distinct(restName)
			from tbl_restaurant
			where restName like '%'||#{keyword}||'%'
		</if>
			
		<if test='srchType.equals("metroName")'>
			select distinct(metroName)
			from tbl_metro
			where metroName like '%'||#{keyword}||'%'
		</if>
			
		<if test='srchType.equals("dongName")'>
			select distinct(dongName)
			from tbl_dong
			where dongName like '%'||#{keyword}||'%'
		</if>
		
		<if test='srchType.equals("guName")'>
			select distinct(guName)
			from tbl_gu
			where guName like '%'||#{keyword}||'%'
		</if>
	</select>
	
	<!-- 검색 자동글완성 (카테고리) 기능 구현 -->
	<select id="r_catAutoComplete"  parameterType="String" resultType="String">
		select distinct(restName)
		from tbl_restaurant
		where restStatus = 0 and restName like '%'||#{keyword}||'%'
	</select>
	<select id="m_catAutoComplete"  parameterType="String" resultType="String">
		select distinct(metroName)
		from tbl_metro
		where metroName like '%'||#{keyword}||'%'
	</select>
	<select id="d_catAutoComplete"  parameterType="String" resultType="String">
		select distinct(dongName)
		from tbl_dong
		where dongName like '%'||#{keyword}||'%'
	</select>
	<select id="g_catAutoComplete"  parameterType="String" resultType="String">
		select distinct(guName)
		from tbl_gu
		where guName like '%'||#{keyword}||'%'
	</select>
	
	
	<!-- 업장이름 리스트 가져오기 -->
	<select id="restaurant.getRestName" parameterType="String" resultType="com.go.mazzipmetro.vo.RestaurantVO">
		select restSeq,  userSeq,  gradeSeq,  restName,  restPhone,
			   restImg,  restAddr,  restNewAddr,  restLatitude,  restLongitude,
			   restZIndex,  dongId,  metroId,  restRegDate,  restVisitor, restStatus
		from TBL_Restaurant
		where restName like '%' || #{name} || '%'
	</select>
	
	<!-- 사업주의  리스트 가져오기 -->
	<select id="getRestrauntList" parameterType="String" resultType="com.go.mazzipmetro.vo.RestaurantVO">
		select restSeq,  userSeq,  gradeSeq,  restName,  restPhone,
			   restImg,  restAddr,  restNewAddr,  restLatitude,  restLongitude,
			   restZIndex,  dongId,  metroId,  restRegDate,  restVisitor, restStatus, restContent
		from TBL_Restaurant
		where userseq = #{userseq} and restStatus = 0
	</select>
	
	<!-- 새 업장 등록 -->
	<insert id="restaurant.setRestRegister" parameterType="com.go.mazzipmetro.vo.RestaurantVO">
		insert into TBL_Restaurant values(TBL_Restaurant_Seq.nextval, #{userSeq}, default, #{restName}
										, #{restPhone}, 
										<if test="restImg == null or restImg.equals('')">
											default
										</if>
										<if test="restImg != null and !restImg.equals('')">
											#{restImg}
										</if>
										, #{restAddr}, #{restNewAddr}
										, #{restLatitude}, #{restLongitude}, TBL_Restaurant_Seq.nextval
										, #{dongId}, #{metroId}, default, 0, default, null)
	</insert>
	
	<!-- 기존 업장 업데이트 -->
	<update id="restaurant.setRestUpdate" parameterType="com.go.mazzipmetro.vo.RestaurantVO">
		update TBL_Restaurant set userSeq = #{userSeq}, restImg = 
										<if test="restImg == null or restImg.equals('')">
											default
										</if>
										<if test="restImg != null and !restImg.equals('')">
											#{restImg}
										</if>
										, restPhone = #{restPhone}, restRegDate = sysdate
		where restSeq = #{restSeq}
	</update>
	
	<!-- 업장을 새로 등록했기 때문에 Seq번호를 새로 가져오기 위함. -->
	<select id = "restaurant.getNewRestSeq" parameterType="String" resultType="String">
		select max(restSeq)
		from TBL_Restaurant
		where userseq = #{userSeq}
	</select>
	
	<!-- 업장 소개글 추가 -->
	<update id="restaurant.setRestContent" parameterType="java.util.HashMap">
		update TBL_Restaurant set restContent = #{restContent}
		where restSeq = #{restSeq}
	</update>
	
	<!-- 업장 이미지 추가 -->
	<insert id="restaurant.setRestImg" parameterType="java.util.HashMap">
		insert into TBL_Restaurant_Ad(restSeq, AdImg) values(#{restSeq}, #{AdImg})
	</insert>
	
	<!-- 업장 대태그 추가 -->
	<insert id="restaurant.setRestBgTag" parameterType="java.util.HashMap">
		insert into TBL_Restaurant_Tag(restSeq, tagSort, tagName, tagStatus) values(#{restSeq}, 'bgCat', #{bgCat}, default)
	</insert>
	
	<!-- 업장 중태그 추가 -->
	<insert id="restaurant.setRestMdTag" parameterType="java.util.HashMap">
		insert into TBL_Restaurant_Tag(restSeq, tagSort, tagName, tagStatus) values(#{restSeq}, 'mdCat', #{mdCat}, default)
	</insert>
	
	<!-- 메뉴 추가 -->
	<insert id="restaurant.setMenu" parameterType="java.util.HashMap">
		insert into TBL_Restaurant_Menu(restSeq, menuName, menuContent, menuImg, menuPrice, menuSalePrice, menuSort, menuEvent, menuStatus) 
		values(#{restSeq}, '${menuName}', #{menuContent}, 
			<if test="menuImg == null or menuImg.equals('')">
				default
			</if>
			<if test="menuImg != null and !menuImg.equals('')">
				#{menuImg}
			</if>
		, #{menuPrice}, #{menuSalePrice}, #{menuSort}, 
			<if test="menuEvent == null or menuEvent.equals('')">
				default
			</if>
			<if test="menuEvent != null and !menuEvent.equals('')">
				#{menuEvent}
			</if>
		, default)
	</insert>
	
	<!-- 해당 회원이 가진 업장번호를 모두 가져오는 SQL -->
	<!--
	<select id = "restaurant.getRestSeq" parameterType="String" resultType="java.util.ArrayList">
		select restSeq
		from TBL_Restaurant
		where userSeq = #{userSeq}
	</select> -->
	
	<!-- 업장 리스트를 위한 정보 가져오기 -->
	<select id="restaurant.getRestrauntEditList" parameterType="String" resultType="com.go.mazzipmetro.vo.RestaurantVO">
		select R.restSeq,  R.userSeq, G.gradeName as gradeSeq,  R.restName,  R.restPhone,
			   R.restImg,  R.restAddr,  R.restNewAddr,  R.restLatitude,  R.restLongitude,
			   R.restZIndex,  R.dongId,  R.metroId,  to_char(R.restRegDate, 'yyyy-mm-dd') as restRegDate,  R.restVisitor, R.restStatus, R.restContent
		from 
		TBL_Restaurant R join TBL_Grade G
		on R.gradeSeq = G.gradeSeq
		where userseq = #{userSeq} and restStatus = 0
	</select>
	
</mapper>
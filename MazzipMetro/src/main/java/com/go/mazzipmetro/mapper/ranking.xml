<?xml version="1.0" encoding="UTF-8"?>
<!-- #11. mapper 기본 설정 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- #12. 루트 엘리먼트 및 네임스페이스 설정하기(이 네임스페이스의 이름은 프로젝트 전체 내에서 반드시 고유해야만 한다.) --> 
<mapper namespace="ranking">
	<!-- 지하철 데이터를 가져오는 SQL문 -->
	<resultMap type="java.util.HashMap" id="getMetro">
		 <result column="metroId"	  	        property="metroId" 			    	javaType="String" />
		 <result column="metroName"	  	    	property="metroName" 			    javaType="String" />
	</resultMap>
	<select id = "ranking.getMetro" resultMap = "getMetro">
		select metroId, metroName
		from TBL_Metro
	</select>
	
	<!-- 동 데이터를 가져오는 SQL문 -->
	<resultMap type="java.util.HashMap" id="getDong">
		 <result column="dongId"	  	        property="dongId" 			    	javaType="String" />
		 <result column="dongName"	  	    	property="dongName" 			    javaType="String" />
	</resultMap>
	<select id = "ranking.getDong" resultMap = "getDong">
		select dongId, dongName
		from TBL_Dong
	</select>
	
	<!-- 지하철 데이터를 가져오는 SQL문 (검색단어 존재) -->
	<select id = "ranking.searchMetroName" parameterType="String" resultMap = "getMetro">
		select metroId, metroName
		from TBL_Metro
		where metroName like '%' || #{metroName} || '%'
	</select>
	
	<!-- 동 데이터를 가져오는 SQL문 (검색단어 존재) -->
	<select id = "ranking.searchDongName" parameterType="String" resultMap = "getDong">
		select dongId, dongName
		from TBL_Dong
		where dongName like '%' || #{dongName} || '%'
	</select>

	<resultMap type="java.util.HashMap" id="restRanking">
		 <result column="restSeq"	  	        property="restSeq" 			    	javaType="String" />
		 <result column="restName"	  	    	property="restName" 			    javaType="String" />
		 <result column="restAddr"	  	        property="restAddr" 			    javaType="String" />
		 <result column="restNewAddr"	  		property="restNewAddr" 				javaType="String" />
		 <result column="restPhone"	  	    	property="restPhone" 			    javaType="String" />
		 <result column="restImg"	  	    	property="restImg" 			    	javaType="String" />
		 <result column="metroName"	  	        property="metroName" 			    javaType="String" />
		 <result column="dongName"	  	    	property="dongName" 			    javaType="String" />
		 <result column="restRegDate"	  	    property="restRegDate" 				javaType="String" />
		 <result column="restBgTag"	  	    	property="restBgTag" 				javaType="String" />
		 <result column="restMdTag"	  	    	property="restMdTag" 				javaType="String" />
		 <result column="rank"	  	    		property="rank" 					javaType="String" />
		 <result column="reviewAvgScore"	  	property="reviewAvgScore" 			javaType="String" />
		 <result column="count"	  	    		property="count" 					javaType="String" />
		 <result column="score"	  	    		property="score" 					javaType="String" />
	</resultMap>
	<!-- 기간 상관없이 랭킹 -->
	<select id = "ranking.getNotDateRestRanking" parameterType="java.util.HashMap" resultMap="restRanking" >
		select V.*
		from
		(
		select T.*, M.metroName, D.dongName, row_number() over(order by  reviewavgscore*count desc) as rank, round(F.reviewavgscore, 1), F.count, round(F.reviewavgscore*F.count, 1) as score
				from TBL_restaurant T join
		      (
		      select restseq, avg(reviewavgscore) as reviewavgscore, count(*) as count
		      from TBL_Review
		      group by restseq
		      )F  
				on T.restSeq = F.restSeq
		    join TBL_metro M
		    on T.metroId = M.metroId
		    join TBL_Dong D
		    on T.dongId = D.dongId
		)V
		where 1=1 
			<foreach collection="optionList" item="option">
				and ${option.parameter} like '%' || #{option.value} || '%' 
			</foreach>
	</select>
	
	<!-- 최근 일주일 랭킹 -->	
	<select id = "ranking.getOneWeekRestRanking" parameterType="java.util.HashMap" resultMap="restRanking" >
		select V.*
		from
		(
		select T.*, M.metroName, D.dongName, row_number() over(order by  reviewavgscore*count desc) as rank, round(F.reviewavgscore, 1), F.count, round(F.reviewavgscore*F.count, 1) as score
				from TBL_restaurant T join
		      (
		      select restseq, avg(reviewavgscore) as reviewavgscore, count(*) as count
		      from TBL_Review
		      group by restseq
		      )F  
				on T.restSeq = F.restSeq
		    join TBL_metro M
		    on T.metroId = M.metroId
		    join TBL_Dong D
		    on T.dongId = D.dongId
		)V
		where restRegDate > (sysdate - 7) 
			<foreach collection="optionList" item="option">
				and ${option.parameter} like '%' || #{option.value} || '%' 
			</foreach>
	</select>

	<!-- 최근 한 달 랭킹 -->	
	<select id = "ranking.getOneMonthRestRanking" parameterType="java.util.HashMap" resultMap="restRanking" >
		select V.*
		from
		(
		select T.*, M.metroName, D.dongName, row_number() over(order by  reviewavgscore*count desc) as rank, round(F.reviewavgscore, 1), F.count, round(F.reviewavgscore*F.count, 1) as score
				from TBL_restaurant T join
		      (
		      select restseq, avg(reviewavgscore) as reviewavgscore, count(*) as count
		      from TBL_Review
		      group by restseq
		      )F  
				on T.restSeq = F.restSeq
		    join TBL_metro M
		    on T.metroId = M.metroId
		    join TBL_Dong D
		    on T.dongId = D.dongId
		)V
		where restRegDate > (sysdate - 30) 
			<foreach collection="optionList" item="option">
				and ${option.parameter} like '%' || #{option.value} || '%' 
			</foreach>
	</select>

	<!-- 최근 3달 랭킹 -->	
	<select id = "ranking.getThreeMonthRestRanking" parameterType="java.util.HashMap" resultMap="restRanking" >
		select V.*
		from
		(
		select T.*, M.metroName, D.dongName, row_number() over(order by  reviewavgscore*count desc) as rank, round(F.reviewavgscore, 1), F.count, round(F.reviewavgscore*F.count, 1) as score
				from TBL_restaurant T join
		      (
		      select restseq, avg(reviewavgscore) as reviewavgscore, count(*) as count
		      from TBL_Review
		      group by restseq
		      )F  
				on T.restSeq = F.restSeq
		    join TBL_metro M
		    on T.metroId = M.metroId
		    join TBL_Dong D
		    on T.dongId = D.dongId
		)V
		where restRegDate > (sysdate - 90) 
			<foreach collection="optionList" item="option">
				and ${option.parameter} like '%' || #{option.value} || '%' 
			</foreach>
	</select>

	<!-- 최근 1년 랭킹 -->	
	<select id = "ranking.getOneYearRestRanking" parameterType="java.util.HashMap" resultMap="restRanking" >
		select V.*
		from
		(
		select T.*, M.metroName, D.dongName, row_number() over(order by  reviewavgscore*count desc) as rank, round(F.reviewavgscore, 1), F.count, round(F.reviewavgscore*F.count, 1) as score
				from TBL_restaurant T join
		      (
		      select restseq, avg(reviewavgscore) as reviewavgscore, count(*) as count
		      from TBL_Review
		      group by restseq
		      )F  
				on T.restSeq = F.restSeq
		    join TBL_metro M
		    on T.metroId = M.metroId
		    join TBL_Dong D
		    on T.dongId = D.dongId
		)V
		where restRegDate > (sysdate - 365) 
			<foreach collection="optionList" item="option">
				and ${option.parameter} like '%' || #{option.value} || '%' 
			</foreach>
	</select>

</mapper>
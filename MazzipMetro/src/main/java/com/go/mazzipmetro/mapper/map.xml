<?xml version="1.0" encoding="UTF-8"?>
<!-- #11. mapper 기본 설정 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- #12. 루트 엘리먼트 및 네임스페이스 설정하기(이 네임스페이스의 이름은 프로젝트 전체 내에서 반드시 고유해야만 한다.) --> 
<mapper namespace="map">

	<insert id="insertMetro" parameterType="java.util.HashMap">
		insert into tbl_metro(metroId, metroName, metroNum, latitude, longitude)
		values(#{metroNum}||lpad(seq_tbl_metro.nextval,3,'0'),#{metroName},#{metroNum}, #{latitude},#{longitude})
	</insert>
	
	<insert id="insertRestaurant" parameterType="java.util.HashMap">
		insert into tbl_restaurant(restSeq, userSeq, restName, restAddr, restNewAddr, restPhone, restLatitude, restLongitude, restZIndex, metroId, dongId)
		values(seq_tbl_restaurant.nextval, 0, #{restaurantTitle},#{addr},#{newAddr},#{phone},#{latitude},#{longitude},seq_tbl_restaurant.currval,#{metroId},#{dongId})    
	</insert>
	
	<select id="dongId"  parameterType="String" resultType="String" >
		select dongId
		from tbl_dong
		where dongName = #{dongName}
	</select>
	
	<select id="metroId"  parameterType="String" resultType="String" >
		select metroId
		from tbl_metro
		where metroName = #{metroName}
	</select>
	
	<!-- 지하철 역명 가져오기(업장 직접 등록시 사용) -->
	<select id="getMetroNameList"  parameterType="String" resultType="String" >
		with t as (
		  select 'ㄱ' as metroname from dual union all
		  select 'ㄴ' from dual union all
		  select 'ㄷ' from dual union all
		  select 'A' from dual union all
		  select 'B' from dual
		)  
		select metroname
		from tbl_metro
		where metronum= #{metroNum}
		order by convert(metroname, 'ISO2022-KR')
	</select>
	
	
	<resultMap type="java.util.HashMap" id="restaurantList">
		<result column="restName" 		property="restName" 		javaType="String"/><!-- vo의 멤버변수명이다. 여기는 xml -->
		<result column="restSeq" 			property="restSeq" 			javaType="String"/> 	
		<result column="restLongitude" 	property="lng" 					javaType="String"/>
		<result column="restLatitude" 		property="lat" 					javaType="String" />  
	</resultMap>
	
	<!-- 관리자용 음식점 검색 -->
	<select id="getRestaurantList" parameterType="java.util.HashMap" resultMap="restaurantList">
		select A.restName
				, A.restSeq
				, A.restLongitude
				, A.restLatitude
				, B.guName
		from (
			select A.*, B.dongName, B.guId
			from (
				select A.*, B.metroName
				from tbl_restaurant A left join tbl_metro B
				on A.metroId = B.metroId) A 
			left join tbl_dong B
			on A.dongId = B.dongId) A
		left join tbl_gu B
		on A.guId = B.guId
		where 1 = 1
		
		<!-- 키워드로 통합 검색하는 경우 -->
		<if test="srchType[0].equals('all') and keyword[0] != '' ">
			and ( restName like '%'||#{keyword[0]}||'%' 
				or metroName like '%'||#{keyword[0]}||'%'
				or dongName like '%'||#{keyword[0]}||'%'
				or guName like '%'||#{keyword[0]}||'%' )
		</if>
		<!-- 키워드로 검색하는 경우 (1.음식점이름 2. 해당지하철 3. 해당 동 4. 해당 ) -->
		<if test="!srchType[0].equals('all') and keyword[0] != null">
			and ${srchType[0]} like '%'||#{keyword[0]}||'%'
		</if>
		
		
		<!-- 		태그명(대분류,중분류)검 -->
		<if test="restTagArr != null">
			and A.restSeq in (select distinct(restSeq)
					                  from tbl_restaurant_tag
					                  where tagName in
									<foreach collection="restTagArr"  index="i" open="(" close=")" separator=",">
										'${restTagArr[i]}'
									</foreach>
									 )
		</if>
		<!-- 업주 조건절 -->
		<if test="!userSeq[0].equals('all')">
			<if test="userSeq[0].equals('admin')">and A.userSeq = 0</if>
			<if test="userSeq[0].equals('notAdmin')">and A.userSeq != 0 </if>
			
			<!-- <if test="userSeq[0].equals('0')">and A.userSeq = 0</if> -->
			<!-- <if test="userSeq[0].equals('1')">and A.userSeq != 0 </if> -->
		</if>
			
		<!-- 삭제 여부 조건절 -->
		<if test="!restStatus[0].equals('all')">
			and A.restStatus = #{restStatus[0]}
		</if>
		
	</select>
	
	<!-- 지하철역별 등록된 음식점 보여주기 (페이징)-->
	<select id="searchByMetro" parameterType="java.util.HashMap" resultType="com.go.mazzipmetro.vo.RestaurantVO">
		select V.*
		from (
		select row_number () over(order by restVisitor desc) AS rnum
		     , A.*
		from tbl_restaurant A 
		where  A.restStatus = 0
		<if test="metroId != null">
			and metroId = #{metroId}
		</if>
		<!-- <if test="keyword != null">
		and metroId = (select metroId from tbl_metro where metroName like '%'||#{keyword}||'%')
		</if> -->
		) V
		where rnum between #{start} and #{end}
	</select>
	
	<!-- 지하철역별 Best5 metroMap tooltip 정보 가져오기-->
	<select id="getBest5RestInMetroMap" parameterType="String" resultType="com.go.mazzipmetro.vo.RestaurantVO">
		select V.*
		from (
		select row_number () over(order by restVisitor desc) AS rnum
		     , A.*
		from tbl_restaurant A 
		where  A.restStatus = 0
		and metroId = #{keyword}
		) V
		where rnum between 1 and 5
	</select>
	
	<!-- 지하철역별 등록된 음식점 보여주기(bgCat얻어오기) -->
	<select id="getRestBgTag" parameterType="String" resultType="String">
		select tagName
		from tbl_restaurant_tag
		where tagStatus = 0 and restSeq = #{restSeq} and tagSort='bgCat'
	</select>
	
	<!-- 지하철역별 등록된 음식점 보여주기(mdCat얻어오기) -->
	<select id="getRestMdTag" parameterType="String" resultType="String">
		select tagName
		from tbl_restaurant_tag
		where tagStatus = 0 and restSeq = #{restSeq} and tagSort='mdCat'
	</select>
	
	
	<!-- 지하철역별 등록된 음식점 보여주기(총 음시점 수 구하기) -->
	<select id="getTotalCount" parameterType="java.util.HashMap" resultType="int">
		select count(*)
		from tbl_restaurant
		where restStatus = 0
		<if test="metroId != null">
			and metroId = #{metroId}
		</if>
		<!-- <if test="keyword != null">
			and metroId = (select metroId from tbl_metro where metroName like '%'||#{keyword}||'%')
		</if> -->
	</select>
	
	<!-- 지하철 역이름 얻기 (지도페이지로 넘길 때 사용함) -->
	<select id="getMetroName" parameterType="String" resultType="String">
		select metroName
		from tbl_metro
		where metroId = #{metroId}
	</select>
	
	<!-- 업장 추가이미지(restaurantAdVO)가져오기 -->
	<select id="getAdImg" parameterType="String" resultType="String">
		select adImg
		from tbl_restaurant_ad
		where restSeq = #{restSeq} 
	</select>
	
</mapper>